<?xml version="1.0"?>
<launch>

    <arg name="robot_id" value="/robile" />
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="debug" default="false"/>
    <arg name="start_rviz" default="true"/>

    <arg name="global_frame" default="$(arg robot_id)/odom"/>
    <arg name="world_model_name" default="two_rooms"/>

    <!-- Gazebo Server -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    </include>

    <!-- World -->
    <group>
        <arg name="world_model"
             default="$(find robile_sim)/world_description/$(arg world_model_name).xacro"/>
        <param name="world_description"
               command="rosrun xacro xacro '$(arg world_model)'" />

        <!-- Spawn Uploaded World Model -->
        <node pkg="gazebo_ros" name="gazebo_world_model" type="spawn_model" respawn="false" output="screen"
              args="-urdf -param world_description -model world -x 0.0 -y 0.0 -z 0.0" />
    </group>

    <!-- Run the Map Server -->
    <arg name="map_file" default="$(find robile_sim)/world_description/occupancy_grids/$(arg world_model_name).yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

    <node pkg="tf" type="static_transform_publisher" name="odom_to_map"
    args="0 0 0 0 0 0 /map $(arg robot_id)/odom 100" />

    <!-- Robot -->
    <include file="$(find robile_sim)/ros/launch/robile.launch">
        <arg name="model" value="robile"/>
        <arg name="robot_id" value="$(arg robot_id)" />
        <arg name="init_x" value="4.0" />
        <arg name="init_y" value="0.0" />
        <arg name="init_theta" value="0.0" />
    </include>

    <!-- RViz -->
    <group if="$(arg start_rviz)">
        <node pkg="rviz" type="rviz" name="robile_sim_rviz"
              args="-d $(find robile_sim)/ros/config/robile_env.rviz" />
    </group>

    <!-- Laser Filter -->
    <node pkg="laser_filters" type="scan_to_scan_filter_chain"
	name="laser_filter">
	<rosparam command="load" file="$(find robile_sim)/ros/config/laser_config.yaml" />
	<remap from="scan" to="/robile/scan" />
    </node>

</launch>
